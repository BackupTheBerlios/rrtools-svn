;--------------------------------------
;
; TLoad CMD HD
;
;--------------------------------------

THDLdS:
    .PSEUDOPC $0300

    .(	;*** THD ***


LdTrk		= $280a
LdSec		= $280b
LdDp		= $8000
LdZp		= 6
LdBSLo          = $0600
LdBSHi          = $0700
JobBuffer	= $0800

;--------------------------------------

LdDGet:
	ldy #3
LdDGet0:
	lda #4		; 2
LdDGet1:
	bit LdDp	; 4
	.SAFEBRA(beq,LdDGet1)	; 2
	lda LdDp	; 4
	lsr		; 2
	rol LdZp	; 5
			;---
			;19

	lda #4		; 2
LdDGet2:
	bit LdDp	; 4
	.SAFEBRA(bne,LdDGet2)	; 2
	lda LdDp	; 4
	lsr		; 2
	rol LdZp	; 5
			;---
			;19
	dey
	.SAFEBRA(bpl,LdDGet0)
	lda LdZp
	rts


LdTab1:
	.SAFETABLE_START
	.DB $0f,$07,$0d,$05,$0b,$03,$09,$01
	.DB $0e,$06,$0c,$04,$0a,$02,$08,$00
	.SAFETABLE_END

LdBSend:
	lda LdBSLo,x
	sta LdDp
LdBSend0:
	bit LdDp
	.SAFEBRA(bpl,LdBSend0)		;bpl LdBSend0
	asl
	and #$0a
	sta LdDp
LdBSend1:
	bit LdDp
	.SAFEBRA(bmi,LdBSend1)		;bmi LdBSend1
	lda LdBSHi,x
	sta LdDp
LdBSend2:
	bit LdDp
	.SAFEBRA(bpl,LdBSend2)		;bpl LdBSend2
	asl
	and #$0a
	sta LdDp
LdBSend3:
	bit LdDp
	.SAFEBRA(bmi,LdBSend3)		;bmi LdBSend3
	rts

;--------------------------------------

@0THD_LdrStart:
	ldy #0
LdMkTab2:
	ldx #$10
LdMkMod:
	lda LdTab1
LdMkTab1:
	sta LdBSHi,y
	iny
	dex
	bne LdMkTab1
	inc LdMkMod+1
	tya
	bne LdMkTab2
LdMkTab4:
	lda LdTab1,x
	sta LdBSLo,y
	dex
	bpl LdMkTab3
	ldx #$0f
LdMkTab3:
	dey
	bne LdMkTab4

restart:
#ifdef LdFlag_LedFlash
	Led:
		lda #8
		sta LdDp
	Led0:
		ldx #11
	Led1:
		lda LedTab0,X
		sta $8FFF
		ldy #$20
		lda LedTab1+1,X
		ora $8FFF
		sta $8FFF
		lda #1
	Led2:
		bit LdDp
		bne Led4
		dey
		bpl Led2
		ldy #$30
		lda LedTab1,X
		ora $8FFF
		sta $8FFF
		lda #1
	Led3:
		bit LdDp
		bne Led4
		dey
		bpl Led3
		dec LedCnt
		bne Led1
		dex
		bpl Led1
		bmi Led0
	Led4:
#else
		lda #8
		sta LdDp
		lda #1
	atnw:
		bit LdDp
		beq atnw
#endif
continue:
	lda #0
	sta LdDp
	jsr LdDGet
	tax
	jsr LdDGet
	cpx #0
	bne Ld1
	tay
	beq Ld2
	dey
	bne restart
	ldx $2BA7
	lda $2BA9
Ld1:
	stx LdTrk
	sta LdSec
	lda #$FE
	sta $8FFF

	ldx #5
	lda #$80
	jsr $ff4e
	bcs LdErr

LdSend:
	bit LdDp
	.SAFEBRA(bmi,LdSend)             ;bmi LdSend
	ldy #0
	ldx #0
	jsr LdBSend
LdSLoop:
	ldx JobBuffer,Y
	jsr LdBSend
	iny
	bne LdSLoop
	beq continue
Ld2:
	cli
	rts

LdErr:
	ldx #1
	jsr LdBSend
	bpl continue        ; bra

;--------------------------------------

#ifdef LdFlag_LedFlash
LedTab0:
	.DB $bd,$b9,$b3,$73,$77,$7f,$77,$73
	.DB $b3,$b9,$bd,$fd
LedTab1:
	.DB $00,$40,$04,$08,$80,$00,$00,$08
	.DB $04,$40,$02,$00,$00
LedCnt:
	.DB 0
#endif

;--------------------------------------

    .)	;*** THD ***

THDLdEnd:
    .REALPC
THDLdE:


