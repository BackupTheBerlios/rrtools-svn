/////////////////////////////////////////////////////////////////////////////
// Name:        cbmimager.h
// Purpose:     
// Author:      
// Modified by: 
// Created:     16/10/2006 19:08:44
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 16/10/2006 19:08:44

#ifndef _CBMIMAGER_H_
#define _CBMIMAGER_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "cbmimager.h"
#endif


/*!
 * Includes
 */

////@begin includes
#include <wx/frame.h>
#include <wx/statusbr.h>
#include <wx/splitter.h>
#include <wx/listctrl.h>

#include "cbmimager_id.h"

#include "odlistbox.h"

#include "Logic/imagebase.h"
#include "Logic/cbmdirectory.h"

////@end includes


WX_DEFINE_ARRAY(CCbmSector*, BAMStack);

/*!
 * Forward declarations
 */

////@begin forward declarations
class wxMenu;
class wxStatusBar;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define SYMBOL_CBMIMAGER_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX
#define SYMBOL_CBMIMAGER_TITLE _("CBM Imager")
#define SYMBOL_CBMIMAGER_IDNAME ID_CBMIMAGER
#define SYMBOL_CBMIMAGER_SIZE wxSize(400, 300)
#define SYMBOL_CBMIMAGER_POSITION wxDefaultPosition
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

/*!
 * CBMImager class declaration
 */

class CBMImager: public wxFrame
{    
    DECLARE_DYNAMIC_CLASS( CBMImager )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    CBMImager( );
    CBMImager( wxWindow* parent, wxWindowID id = SYMBOL_CBMIMAGER_IDNAME, const wxString& caption = SYMBOL_CBMIMAGER_TITLE, const wxPoint& pos = SYMBOL_CBMIMAGER_POSITION, const wxSize& size = SYMBOL_CBMIMAGER_SIZE, long style = SYMBOL_CBMIMAGER_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_CBMIMAGER_IDNAME, const wxString& caption = SYMBOL_CBMIMAGER_TITLE, const wxPoint& pos = SYMBOL_CBMIMAGER_POSITION, const wxSize& size = SYMBOL_CBMIMAGER_SIZE, long style = SYMBOL_CBMIMAGER_STYLE );

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin CBMImager event handler declarations

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUFILENEW
    void OnMenufilenewClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUFILEOPEN
    void OnMenufileopenClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUFILESAVE
    void OnMenufilesaveClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUFILESAVEAS
    void OnMenufilesaveasClick( wxCommandEvent& event );

	void OnMenufilesearchClick( wxCommandEvent& event);

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUFILEEXIT
    void OnMenufileexitClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_LISTBOX_SELECTED event handler for ID_LISTBOXFILES
    void OnListboxfilesDClick( wxCommandEvent& event );

	void OnMenuextrasEditFile( wxCommandEvent& event);
	void OnMenuextrasEditBam( wxCommandEvent& event);
    
	void OnClose(wxCloseEvent& event);

	void OnEvent(wxCommandEvent& event);

	void OnContextMenu(wxContextMenuEvent& event);

	void OnODListDrag(wxCommandEvent& event);

////@end CBMImager event handler declarations

////@begin CBMImager member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end CBMImager member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin CBMImager member variables
	wxMenu* m_FileMenu;
	wxMenu* m_extrasMenu;
	CODListBox* m_FileList;
	wxStatusBar* m_StatusBar;

	wxBoxSizer *m_sizerMain;
	wxSplitterWindow *m_splitter;
	wxBoxSizer *m_upperBoxSizer;
	wxBoxSizer *m_lowerBoxSizer;
	wxPanel *m_upperPanel;
	wxPanel *m_lowerPanel;
	wxListCtrl *m_actionList;
	wxTextCtrl *m_messageLog;
	wxLogTextCtrl *m_logTextCtrl;
////@end CBMImager member variables

	void OpenImage(wxString& fileName);
	void ReadCbmDirectory();
	void AddFile(wxString& filename);
	void ExtractFile(CCbmDirectoryEntry *entry, wxString& fileName);
	CbmImageType GetCurrentImageType();
	bool IsDragSource();
	void SetItemUnderCursor(int index);

private:
	wxBitmap image;
	CCbmImageBase *cbmImage;
	CCbmDirectory *cbmDir;
	BAMStack bamStack;				// Stores the BAM's of Directorys
	bool isDragSource;
	wxArrayString usedTempFiles;
	int itemUnderCursor;
};

/*!
 * CBMImager class declaration
 */


#endif
    // _CBMIMAGER_H_
